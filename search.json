[{"title":"Git 技巧集录","url":"/2018/09/10/Git 技巧集录/","content":"\n### 提取差异并打包\n1. 查看版本 id\n\n    ~~~bash\n    # 64b76ec0e81dc45b8d4dea418afe34e5c49e7c09 (HEAD -> master, origin/master) 变更说明\n    # 9dd00bc6e704c8d4ddeb9001f3eeb3ff8ebfb744 变更说明\n    # d4549e575d3114210dc22a903ff708768f81dddc 变更说明\n    # eb11b702409f2170644a30ed749e1bea6eeade16 变更说明\n    # ……\n    git log --pretty=oneline\n    ~~~\n\n2. 对比差异\n    \n    - **注意**：commit hash 不用全部的，前 7 位就好\n    - 如：64b76ec0e81dc45b8d4dea418afe34e5c49e7c09 -> 64b76ec\n    \n    ~~~bash\n    # 差异文件 1\n    # 差异文件 2\n    # 差异文件 3\n    # ……\n    git diff 64b76ec eb11b70 --name-only\n    ~~~\n\n3. 打包\n\n    <!-- more -->\n\n    ~~~bash\n    git diff 64b76ec eb11b70 --name-only | xargs zip update.zip\n    ~~~\n","tags":["skills"],"categories":["technology"]},{"title":"《Linux就该这么学》读书笔记·贰","url":"/2018/09/04/《Linux就该这么学》读书笔记·贰/","content":"## 新手必须掌握的 Linux 命令\n\n### Shell\n1. 主流 Linux 默认终端是 Bash，优点如下：\n    - 命令执行历史; \n    - 命令或参数 Tab 补全; \n    - 批处理脚本;\n    - 环境变量功能。\n    \n### 帮助命令\n1. 标准格式：`命令名称 [命令参数] [命令对象]`\n    - 长格式：`man --help`\n    - 短格式：`man -h`\n\n2. 查看命令帮助 `man 命令`，如`man ping`、`man man`\n\n### 常用工作命令\n<!--more-->\n\n#### ***echo***\n- 格式：`echo [字符串 | $变量]`\n- 作用：输入信息\n\n    ```bash 案例 http://man.linuxde.net/echo echo\n    echo string\n    echo $SHELL\n    echo \"content\" >> file\n    ```\n\n#### ***reboot***\n- 格式：`reboot`\n- 作用：重启系统\n\n    ```bash 案例 http://man.linuxde.net/reboot reboot\n    # 涉及硬件管理权限，需要 root 权限\n    reboot\n    ```\n\n#### ***poweroff***\n- 格式：`poweroff`\n- 作用：关闭系统\n\n    ```bash 案例 http://man.linuxde.net/poweroff poweroff\n    # 涉及硬件管理权限，需要 root 权限\n    poweroff\n    ```\n\n#### ***date***\n- 格式：`date [选项] [+指定的格式]`\n- 作用：查看时间\n- 参数：\n\n|序号|参数|作用|\n| :-: | - | - |\n| 1 | %t | Tab |\n| 2 | %H | 24时制 |\n| 3 | %I | 12时制 |\n| 4 | %M | 分钟 |\n| 5 | %S | 秒 |\n| 6 | %j | 今年中第几天 |\n\n```bash 案例 http://man.linuxde.net/date date\n# 2018年 9月 4日 星期二 22时28分33秒 CST\ndate\n# 2018-09-04 22:29:13\ndate \"+%Y-%m-%d %H:%M:%S\"\n# 设置系统时间\ndate -s \"20170901 8:30:00\"\n# 查看今天是当年第几天\ndate \"+%j\"\n```\n\n#### ***wget***\n- 格式：`wget [参数] 下载地址`\n- 作用：下载网络文件\n- 参数：\n\n|序号|参数|作用|\n| :-: | - | - |\n| 1 | -b | 后台下载模式 |\n| 2 | -P | 下载到指定目录 |\n| 3 | -t | 最大重试次数 |\n| 4 | -c | 断点续传 |\n| 5 | -p | 下载页面所有资源 |\n| 6 | -r | 递归下载 |\n\n```bash 案例 http://man.linuxde.net/wget wget\nwget http://www.linuxprobe.com/docs/LinuxProbe.pdf\nwget -r -p http://www.linuxprobe.com\n```\n\n#### ***ps***\n- 格式：`ps [参数]`\n- 作用：查看系统进程状态\n- 参数：\n\n|序号|参数|作用|\n| :-: | - | - |\n| 1 | -a |  显示包含其他用户进程在内的所有进程 |\n| 2 | -u | 用户及其他详细信息 |\n| 3 | -x | 显示没有控制终端的进程 |\n\n进程状态：\n\n|序号|状态|说明||\n| :-: | - | - |\n| 1 | R(运行) | 进程正在运行或处于运行队列 |\n| 2 | S(中断) | 进程休眠中，等待合适条件唤醒 |\n| 3 | D(不可终止) | 进程不响应系统异步信号，kii 命令也无法终端 |\n| 4 | Z(僵死) | 进程终止，但是描述符依然存在，直至父进程调用 wat4() 后释放 |\n| 5 | T(停止) | 进程收到停止信号后终止运行 |\n\n```bash 案例 http://man.linuxde.net/ps ps \n# ps 支持系统繁多，所以参数非常多\nps -a\n```\n\n#### ***top***\n- 格式：`top`\n- 作用：动态地监视进程活动和系统负载\n\n    ```bash 案例 http://man.linuxde.net/top top\n    # load avg，三个数值分别为 1 分钟、5 分钟、15 分钟内的平均值，数值越小意味着负载越低\n    top\n    ```\n\n#### ***pidof***\n- 格式：`pidof [参数] [服务名称]`\n- 作用：查询某个指定服务进程的 PID 值\n\n    ```bash 案例 http://man.linuxde.net/pidof pidof\n    # pid\n    pidof sshd\n    ```\n\n#### ***kill***\n- 格式：`kill [参数] [进程 PID]`\n- 作用：终止某个指定 PID 的服务进程\n\n    ```bash 案例 http://man.linuxde.net/kill kill\n    kill -9 xxx\n    ```\n\n#### ***killall***\n- 格式：`killall [参数] [进程 PID]`\n- 作用：终止某个指定名称的服务所对应的全部进程\n\n    ```bash 案例 http://man.linuxde.net/killall killall\n    # 大型的软件会多个进程协同为用户提供服务，逐个结束会很麻烦。\n    killall httpd\n    ```\n\n### 系统状态监测命令\n#### ***ifconfig***\n- 格式：`ifconfig [网络参数] [参数]`\n- 作用：获取网卡配置与网络状态\n\n    ```bash 案例 http://man.linuxde.net/ifconfig ifconfig\n    ifconfig\n    ```\n\n#### ***uname***\n- 格式：`uname [-a]`\n- 作用：查看系统内核与系统版本\n\n    ```bash 案例 http://man.linuxde.net/uname uname\n    # Linux centos-linux.shared 3.10.0-862.el7.x86_64 \n    # #1 SMP Fri Apr 20 16:44:24 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\n    uname -a\n    ```\n\n#### ***uptime***\n- 格式：`uptime`\n- 作用：查看系统敷在信息，显示当前系统时间、已运行时间、启用终端数、平均负载信息\n\n    ```bash 案例 http://man.linuxde.net/uptime uptime\n    # 01:08:44 up 15:49,  4 users,  load average: 0.08, 0.04, 0.05\n    uptime\n    ```\n\n#### ***free***\n- 格式：`free [-h]`\n- 作用：查看当前系统中内存的使用量信息\n\n    ```bash 案例 http://man.linuxde.net/free free\n    #        total   used   free   shared  buff/cache   available\n    # Mem:    1.8G   1.2G   111M     4.5M        480M        354M\n    # Swap:   2.0G    48M   2.0G\n    free -h\n    ```\n\n#### ***who***\n- 格式：`who [参数]`\n- 作用：查看当前登入主机的用户终端信息\n\n    ```bash 案例 http://man.linuxde.net/who who\n    # root     tty1         2018-08-17 11:55\n    # root     pts/0        2018-08-20 23:32 (10.*.*.2)\n    who\n    ```\n\n#### ***last***\n- 格式：`last [参数]`\n- 作用：查看所有系统的登录记录\n\n    ```bash 案例 http://man.linuxde.net/last last\n    # root     pts/0        10.*.*.2         Fri Aug 17 11:59 - 11:59  (00:00)\n    # root     pts/0        10.*.*.2         Fri Aug 17 11:57 - 11:58  (00:00)\n    # root     tty1                          Fri Aug 17 11:55   still logged in\n    # reboot   system boot  3.10.0-862.el7.x Fri Aug 17 11:55 - 01:15 (3+13:20)\n    last\n    ```\n\n#### ***history***\n- 格式：`history [-c]`\n- 作用：用于显示历史执行过的命令\n- **注意**：\n    - 可以用`!数字`的命令格式重复执行某一次的命令记录，从而避免了重复输入较长\n命令的麻烦。 \n\n    ```bash 案例 http://man.linuxde.net/history history\n    # 1  history\n    # 2  vi /etc/profile\n    # 3  sosreport\n    # ……\n    history\n    \n    # !数字 重复执行，!1 同 history \n    !1 \n    \n    # -c 参数会清空所有的历史记录\n    # 默认记录1000条，如果不够的，修改 `/etc/profile` 文件中的 `HISTSIZE`\n    history -c\n    ```\n\n#### ***sosreport***\n- 格式：`sosreport`\n- 作用：收集系统配置以及架构信息，并输出诊断文档，格式为`sosreport`\n- **注意**：精简化安装的 Centos 7.5 中没有该指令，请执行 `yum -y install sos`\n- 参考：[github  sos](https://github.com/sosreport/sos)\n\n    ```bash 案例 https://sos.readthedocs.io/en/latest/ sosreport\n    sosreport\n    ```\n\n### 工作目录切换命令\n#### ***pwd***\n- 格式：`pwd [选项]`\n- 作用：显示用户当前所处的工作目录\n\n    ```bash 案例 http://man.linuxde.net/pwd pwd\n    # /root\n    pwd\n    ```\n\n#### ***cd***\n- 格式：`cd [选项]`\n- 作用：切换工作路径\n\n    ```bash 案例 http://man.linuxde.net/cd cd\n    cd ~\n    ```\n\n#### ***ls***\n- 格式：`ls [选项]文件`\n- 作用：显示目录中的文件信息\n\n    ```bash 案例 http://man.linuxde.net/ls ls\n    ls -ld /etc\n    ls -la\n    ```\n\n### 文本文件编辑命令\n#### ***cat***\n- 格式：`cat [选项]文件`\n- 作用：用于查看内容较少的纯文本\n\n    ```bash 案例 http://man.linuxde.net/cat cat\n    # -n 参数显示行号\n    cat -n  xxx.txt\n    ```\n\n#### ***more***\n- 格式：`more [选项]文件`\n- 作用：用于查看内容较多的纯文本，会提示百分比\n\n    ```bash 案例 http://man.linuxde.net/more more\n    more xxx.txt\n    ```\n\n#### ***head***\n- 格式：`head [选项]文件`\n- 作用：用于查看纯文本文档的前 N 行\n\n    ```bash 案例 http://man.linuxde.net/head head\n    # -n 表示想查看的行数\n    head -n 20  xxx.txt\n    ```\n\n#### ***tail***\n- 格式：`tail [选项]文件`\n- 作用：用于查看纯文本文档的后 N 行，或是持续刷新内容\n- 备注：tail 是尾巴的意思\n\n    ```bash 案例 http://man.linuxde.net/tail tail\n    # -f 显示文件最新追加的内容\n    tail -f xxx.txt\n    \n    # -n 显示文件后 20 行的代码\n    tail -n  20 xxx.txt\n    ```\n\n#### ***tr***\n- 格式：`tr [原始字符][目标字符]`\n- 作用：批量替换文本中的一些词汇\n\n            ```bash 案例 http://man.linuxde.net/tr tr\n            # 先用 cat 读出待处理文本，然后通过管道符号传递给 tr 命令进行批量操作。\n            # 将小写的英文字母替换为大写的\n            cat xxx.txt | tr [a-z] [A-Z]\n            ```\n\n#### ***wc***\n- 格式：`wc [参数][文本]`\n- 作用：w(ord) c(ount)，统计指定文本的行数、字数、字节数\n- 参数：\n\n|序号|参数|作用|\n| :-: | - | - |\n| 1 | -l |  只显示行数 |\n| 2 | -w | 只显示单词数 |\n| 3 | -c | 只显示字节数 |\n\n```bash 案例 http://man.linuxde.net/wc wc\n# 24 /etc/passwd\nwc -l /etc/passwd\n\n# 34 /etc/passwd\nwc -w /etc/passwd\n\n# 1089 /etc/passwd\nwc -c /etc/passwd\n```\n\n#### ***stat***\n- 格式：`stat [文件名称]`\n- 作用：查看文件的具体纯属信息和时间信息\n\n    ```bash 案例 http://man.linuxde.net/stat stat\n    # 文件：\"/etc/passwd\"\n    # 大小：1089      \t    块：8              IO 块：4096   普通文件\n    # 设备：fd00h/64768d\t    Inode：68774316    硬链接：1\n    # 权限：(0644/-rw-r--r--)    Uid：(0/root)      Gid：(0/root)\n    # 环境：system_u:object_r:passwd_file_t:s0\n    #\n    # 最近访问：2018-08-20 11:44:02.732356792 +0800\n    # 最近更改：2018-08-20 11:44:02.305369253 +0800\n    # 最近改动：2018-08-20 11:44:02.306369224 +0800\n    # 创建时间：-\n    stat /etc/passwd\n    ```\n\n#### ***cut***\n- 格式：`cut [参数] 文本`\n- 作用：按列提取文本字符\n\n    ```bash 案例 http://man.linuxde.net/cut cut\n    # 按行提取\n    # root:x:0:0:root:/root:/bin/bash\n    # bin:x:1:1:bin:/bin:/sbin/nologin\n    head -n 2 /etc/passwd\n    \n    # 按列提取\n    # root\n    # bin\n    # daemon\n    # ……\n    cut -d: -f1 /etc/passwd\n    ```\n\n#### ***diff***\n- 格式：`diff [参数] 文件`\n- 作用：用于比较多个文本文件的差异\n- **注意**：笔者虚拟机上（Centos 7.5 精简安装）没有成功，读者自行测试（2018-09-09 16:14:18）\n\n    ```bash 案例 http://man.linuxde.net/diff diff\n    # 直接显示比较后的结果，判断文件是否相同\n    diff --brief diff_A.txt diff_B.txt\n    \n    # 查看内容对比的具体不同\n    diff -c diff_A.txt diff_B.txt\n    ```\n\n### 文件目录管理命令\n#### ***touch***\n- 格式：`touch [选项]文件名`\n- 作用：创建空白文件或设置文件的时间\n- 参数：\n\n|序号|参数|作用|\n| :-: | - | - |\n| 1 | -a | 仅修改‘读取时间’ （atime） |\n| 2 | -m | 仅修改‘修改时间’ （mtime）|\n| 3 | -d | 同时修改 atime 和 mtime |\n\n```bash 案例 http://man.linuxde.net/touch touch\ntouch a.txt\n# -rw-r--r--. 1 root root    0 8月  21 02:55 a.txt\nls -l \ntouch -d \"2017-05-04 15:44\" a.txt\n# -rw-r--r--. 1 root root    0 5月   4 2017 a.txt\nls -l\n```\n\n#### ***mkdir***\n- 格式：`mkdir [选项]目录`\n- 作用：创建空白目录\n\n    ```bash 案例 http://man.linuxde.net/mkdir mkdir\n    mkdir path\n    # -p 递归创建具有嵌套层级关系的文件目录\n    mkdir -p pathA/pathB/pathC\n    ```\n\n#### ***cp***\n- 格式：`cp [选项] 源文件 目标文件`\n- 作用：复制文件或是目录\n- **注意**：\n    - 目标是`目录`，会将文件复制到该目录下\n    - 目标是`普通文件`，询问是否覆盖\n    - 目标`不存在`，正常复制操作\n- 参数：\n\n|序号|参数|作用|\n| :-: | - | - |\n| 1 | -p | 保留原始文件属性 |\n| 2 | -d | 若对象为 `链接文件`，则保留 `链接文件` 的属性 |\n| 3 | -r | 递归持续复制（目录复制） |\n| 4 | -i | 如果目标文件存在则询问是否覆盖 |\n| 5 | -a | 相当于 -pdr |\n\n```bash 案例 http://man.linuxde.net/cp cp\n# 复制 a.txt 到上一层目录\ncp a.txt ../\n\n# 迭代复制目录 a 中的内容，且不询问是否覆盖\n\\cp -r a/ ../\n```\n\n#### ***mv***\n- 格式：`mv [选项] 源文件 [目标路径|目标文件名]`\n- 作用：剪切文件或是目录，可用于`重命名操作`\n\n    ```bash 案例 http://man.linuxde.net/mv mv\n    # 重命名\n    mv a.txt b.txt\n    ```\n\n#### ***rm***\n- 格式：`rm [选项] 源文件 [目标路径|目标文件名]`\n- 作用：用于删除文件或目录\n\n    ```bash 案例 http://man.linuxde.net/rm rm\n    # 删除文件\n    rm -f a.txt\n    # 删除目录\n    rm -rf a/\n    ```\n\n#### ***dd***\n- 格式：`dd [参数]`\n- 作用：按照制定大小和个数的数据块来复制或转换文件\n- **注意**：\n    - Linux 下存在一个文件`/dev/zero`，本身不占用存储空间，却可以作为 dd 的输入文件，来生成指定大小的文件 \n- 参数：\n\n|序号|参数|作用|\n| :-: | - | - |\n| 1 | if | 输入的文件名称 |\n| 2 | of | 输出的文件名称 |\n| 3 | bs | 设置块的大小 |\n| 4 | count | 设置块的个数 |\n\n```bash 案例一 · 创建文件 http://man.linuxde.net/dd dd\n# 记录了10+0 的读入\n# 记录了10+0 的写出\n# 83886080字节(84 MB)已复制，0.056487 秒，1.5 GB/秒\ndd if=/dev/zero of=10_8_file count=10 bs=8M\n\n# -rw-r--r--. 1 root root  80M 8月  21 03:16 10_8_file\nls -lh\n```\n\n```bash 案例二 · 封装 iso 镜像 http://man.linuxde.net/dd dd\ndd if=/dev/cdrom of=xxx.iso\n```\n\n#### ***file***\n- 格式：`file 文件名`\n- 作用：用于查看文件类型\n\n    ```bash 案例 http://man.linuxde.net/file file\n    # anaconda-ks.cfg: ASCII text\n    file anaconda-ks.cfg\n    \n    # /dev/cdrom: symbolic link to `sr0'\n    file /dev/cdrom\n    ```\n\n### 打包压缩与搜索命令\n#### ***tar***\n- 格式：`tar [选项] [文件|目录]`\n- 作用：对文件或目录进行压缩或解压\n- **注意**：\n    - `.tar`、`.tar.gz`、`.tar.bz2` 格式都是 tar 命令打出的\n    - 参数`-c`、`-x` 不能同时使用\n    - 参数`-f` 需放置在所有参数的最后\n    - 常用压缩：`tar -czvf file.tar.gz`\n    - 常用解压：`tar -xzvf file.tar.gz`\n- 参数：\n\n|序号|参数|作用|\n| :-: | - | - |\n| 1 | -c | 创建压缩文件 |\n| 2 | -x | 解压缩文件 |\n| 3 | -t | 查看压缩包内有哪些文件 |\n| 4 | -z | 使用 Gzip 压缩或解压 |\n| 5 | -j | 使用 bzip2 压缩或解压 |\n| 6 | -v | 显示压缩或解压的郭晨 |\n| 7 | -f | 目标文件名 |\n| 8 | -p | 保留原始的权限与属性 |\n| 9 | -P | 使用据对路径来压缩 |\n| 10 | C | 指定解压到的目录 |\n\n```bash 案例 http://man.linuxde.net/tar tar\n# 压缩\ntar -czvf etc.tar.gz /etc/\n# 解压，-C 执行解压到的路径\ntar -czvf etc.tar.gz -C ./etc/\n```\n\n#### ***grep***\n- 格式：`grep [选项] 文件`\n- 作用：在文本中执行关键词搜索，并显示匹配的结果\n- **注意**：\n    - 最常用的两个参数`-n`、`-v`\n- 参数：\n\n|序号|参数|作用|\n| :-: | - | - |\n| 1 | -b | 将可执行（binary）文件作为文本（text）文件搜索 |\n| 2 | -c | 显示找到的行数 |\n| 3 | -i | 忽略大小写 |\n| 4 | -n | 显示行号 |\n| 5 | -v | 反向选择，列出没有`关键词`的行 |\n\n```bash 案例 http://man.linuxde.net/grep grep\n# 2:bin:x:1:1:bin:/bin:/sbin/nologin\n# 3:daemon:x:2:2:daemon:/sbin:/sbin/nologin\n# 4:adm:x:3:4:adm:/var/adm:/sbin/nologin\n# ……\ngrep /sbin/nologin /etc/passwd\n```\n\n#### ***find***\n- 格式：`find [查找路径] 条件 操作`\n- 作用：在文本中执行关键词搜索，并显示匹配的结果\n- **注意**：\n    - Linux 中一切皆文件，也就是说，一般的搜索工作都是 find 完成的\n- 参数：\n\n|序号|参数|作用|\n| :-: | - | - |\n| 1 | -name | 匹配名称 |\n| 2 | -perm | 匹配权重（mode 完全匹配，-mode 包含即可） |\n| 3 | -user | 匹配所有者 |\n| 4 | -group | 匹配所有组 |\n| 5 | -mtime ±n | 匹配修改内容的时间<br>（-n天以内，+n天以前） |\n| 6 | -atime ±n | 匹配日访问文件的时间<br>（-n天以内，+n天以前） |\n| 7 | -ctime ±n | 匹配修改文件权限的时间<br>（-n天以内，+n天以前） |\n| 8 | -nouser | 匹配无所有者的文件 |\n| 9 | -nogroup | 匹配无所有组的文件 |\n| 10 | -newer f1 !f2 | 匹配比文件 f1 新，但是比文件 f2 旧的文件 |\n| 11 | --type <br> /b/d/c/p/l/f | 匹配文件的类型<br>（字母依次表示：设备、目录、字符设备、管道、链接文件、文本文件） |\n| 12 | -size ±n KB | 匹配文件大小<br>（+50KB表示超过 50KB 的文件，-50KB 表示小于 50KB 的文件） |\n| 13 | -prune | 目录忽略 |\n| 14 | -exec ··· {}\\; | 进一步处理搜索结果的命令 |\n\n```bash 案例一 · 普通搜索 http://man.linuxde.net/find find\n# 搜索 etc 目录下，名字包含 host 的文件\n# /etc/host.conf\n# /etc/hosts\n# ……\nfind /etc -name \"host*\" -print\n```\n\n```bash 案例二 · 参数 -exec http://man.linuxde.net/find find\n# 搜索 etc 目录下，名字包含 host 的文件，并存储结果\nfind /etc -name \"host*\" -exec cp -a {} /root/findresult/ \\;\n```\n\n## 写在最后\n|版本|内容|时间|\n| :-: | - | - |\n| v1.0.0 | 1. 创建文档<br>2. 完成1.4章节前的笔记 | 2018-09-04 23:20:27 |\n| v1.0.1 | 1. 完成剩下的章节内容笔记<br>2. 修改错别字若干<br>3. 修改内容先后，调整板式 | 2018-09-09 17:31:46 |\n\n","tags":["技术"],"categories":["reading"]},{"title":"《Linux就该这么学》读书笔记·壹","url":"/2018/09/04/《Linux就该这么学》读书笔记·壹/","content":"\n## 部署虚拟环境安装 Linux 系统\n### RPM 与 Yum 软件仓库\nRPM 能够完成依赖关系检查，为了解决源码安装的复杂依赖关系而诞生。\n\n目前采用该方案的有：CentOS、Fedora、openSUSE\n\nYum 软件仓库可以根据用户的要求分析出所需软件包及其相关的依赖关系，然后自动从服务器下载软件包并安装到系统。\n\n<!-- more -->\n### systemctl 命令\n用以管理服务。 \n\n**Tips:** `foo.service` 中的 `.service` 可以省略。\n           \n| 序号 | 命令 | 说明 |\n| :-: | - | - |\n| 1 | systemctl start foo.service | 启动服务 |\n| 2 | systemctl restart foo.service | 重启服务 |\n| 3 | systemctl stop foo.service  | 停止服务 |\n| 4 | systemctl reload foo.service | 不终止服务的情况下重载配置 |\n| 5 | systemctl start foo.service | 查看服务状态 |\n| 6 | systemctl enable foo.service | 开机启动 |\n| 7 | systemctl disable foo.service | 禁止开机启动 |\n| 8 | systemctl is-enabled foo.service | 检查特定服务是否开机启动 |\n| 9 | systemctl list-unit-files --type=service | 查看各个级别下服务的启动、禁用情况 |\n\n## 写在最后\n|版本|内容|时间|\n| :-: | - | - |\n| v1.0.0 | 1. 创建文档<br>2. 完成该章笔记 | 2018-09-04 23:20:27 |\n","tags":["技术"],"categories":["reading"]},{"title":"《Linux就该这么学》读书笔记·〇","url":"/2018/09/04/《Linux就该这么学》读书笔记·〇/","content":"\n## 背景\n针对[《LINUX就该这么学》](http://www.linuxprobe.com/docs/LinuxProbe.pdf)一书的读书笔记\n\n系统版本：Centos 7.5\n成文时间：2018-09-04\n\n> ***PS：***\n>　请注意文章 **时效性** 和 **系统版本** ，哪里不会点哪里。\n\n## 笔记列表\n<!-- more -->\n- [第〇章 笔记 · 起始](#)\n- [第一章 部署虚拟环境安装 Linux 系统](../../../../2018/09/04/《Linux就该这么学》读书笔记·壹/)\n- [第二章 新手必须掌握的 Linux 命令](../../../../2018/09/04/《Linux就该这么学》读书笔记·贰/)\n\n## ***参考资料***\n1. [Linux 命令大全](http://man.linuxde.net)\n\n## 进度：\n\n| 序号 | 页码 | 章节 | 时间 |\n| :--: | :--: | :-- | :--: |\n| 1 | Page 42 | Chapter 1.5 RPM(红帽软件包管理器)  | 2018-09-03 21:18:40 |\n| 2 | Page 58 | Chapter 2.4 系统状态检测命令 | 2018-09-04 23:11:53 |\n| 3 | Page 78 | Chapter 2.8 打包压缩与搜索命令 | 2018-09-09 17:37:54 |\n\n## 写在最后\n|版本|内容|时间|\n| :-: | - | - |\n| v1.0.0 | 1. 创建文档<br>2. 完成第一章阅读笔记 | 2018-09-04 23:20:27 |\n| v1.0.1 | 1. 添加当前版块内容<br>2. 完成第二章阅读笔记<br>3. 修改内容先后，调整板式 | 2018-09-09 17:37:06 |\n","tags":["技术"],"categories":["reading"]},{"title":"项目收集","url":"/2018/09/04/Github项目收集/","content":"\n##### 机器学习\n1. [机器学习 100 天](https://github.com/MachineLearning100/100-Days-Of-ML-Code)\n\n#####  服务端\n1. [暂无](#)\n<!-- more -->\n\n#####  移动端\n1. [暂无](#)\n\n#####  前端\n1. [暂无](#)\n","tags":["github"],"categories":["technology"]},{"title":"片断·09042018","url":"/2018/09/04/片断·09042018/","content":"\n好羡慕那些活得很舒展的人啊。\n\n我不行。我太拧巴了。没办法喜欢自己，也没办法有耐心。皱巴巴的，像一张心烦意乱的时候被揉烂了的纸。\n\n害怕人群，但又想要被喜欢。总之别扭极了，翻来覆去，也找不到一个适合自己活着的姿势。\n\n<!-- more -->\n觉得自己糟透了。\n","tags":["文字"],"categories":["emotion"]},{"title":"2018 书单","url":"/2018/08/31/书单/","content":"### 在阅目录\n| 序号 | 书名 | 作者 | 类型 | 开始日期 | 结束日期 |\n| :--: | --- | --- | ---- | ------ | ------- |\n| 1 | LINUX 就该这么学 | 刘遄 | Linux | 2018-09-04 | - |\n| 2 | 精灵宝钻 | J.R.R. 托尔金 | 魔幻 | 2018-04-23 | - |\n\n### 备阅目录\n| 序号 | 书名 | 作者 | 类型 | 开始日期 | 结束日期 |\n| :--: | --- | --- | ---- | ------ | ------- |\n| 1  | 布道之道: 引领团队拥抱技术创新 | Terrence Ryan | 管理 | - | - |\n| 2  | 江湖丛谈 | 连阔如 | 杂谈 | - | - |\n\n<!-- more -->\n### 已读目录\n| 序号 | 书名 | 作者 | 类型 | 开始日期 | 结束日期 |\n| :--: | --- | --- | ---- | ------ | ------- |\n| 1 | 天才向左，疯子向右 | Kay Redfield Jamison | 心理 | - | - |\n| 2  | 肖申克的救赎 | 斯蒂芬·金 | 小说 | - | - |\n| 3  | 1988：我想和这个世界谈谈 | 韩寒 | 小说 | - | - |\n| 4 | 达芬奇密码 | 丹·布朗 | 小说 | - | - |\n| 5  | 风语 | 麦家 | 解密 | - | - |\n| 6  | 活着 | 余华 | 小说 | - | - |\n| 7 | 安卓群英传 | 徐宜生 | 技术 | - | - |\n| 8  | 夜谭十记：让子弹飞 | 马识途<br>姜文 | 小说 | - | - |\n| 9  | 给孩子讲量子力学 | 李淼 | 科普 | 2018-09-03 | 2018-09-03 |\n","tags":["书单"],"categories":["reading"]}]